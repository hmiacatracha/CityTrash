<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- **************************************************************** -->
	<!-- SPRING ANNOTATION PROCESSING -->
	<!-- **************************************************************** -->
	<mvc:annotation-driven />
	<context:component-scan base-package="es.udc.citytrash.controller" />
	<mvc:annotation-driven validator="validator" />
	<!-- spring security -->
	<import resource="classpath:/spring-security.xml" />

	<!-- **************************************************************** -->
	<!-- THYMELEAF-SPECIFIC ARTIFACTS -->
	<!-- TemplateResolver <- TemplateEngine <- ViewResolver -->
	<!-- **************************************************************** -->
	<!-- Thymeleaf Template Resolver -->
	<bean id="templateResolver"
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="classpath:/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML" />
		<!-- Template cache is set to false (default is true). -->
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<!-- https://devhub.io/repos/thymeleaf-thymeleaf-extras-springsecurity -->
		<property name="additionalDialects">
			<set>
				<bean
					class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect" />
			</set>
		</property>
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="characterEncoding" value="UTF-8" />
	</bean>

	<!-- **************************************************************** -->
	<!-- MESSAGE EXTERNALIZATION/INTERNATIONALIZATION -->
	<!-- Standard Spring MessageSource implementation -->
	<!-- **************************************************************** -->
	<!-- especificamos los .properties, uno por cada vista -->
	<!-- http://shibboleth.net/pipermail/users/2015-November/025186.html -->
	<!-- http://www.programacionj2ee.com/internacionalizacion-i18n-en-spring/ -->
	<!-- https://memorynotfound.com/spring-mvc-internationalization-i18n-example/ -->
	<!-- https://howtodoinjava.com/spring/spring-mvc/spring-mvc-internationalization-i18n-and-localization-i10n-example/ -->
	<!-- http://acodigo.blogspot.com.es/2017/04/spring-mvc-i18n-soporte-para-varios.html -->

	<!-- PASO1: Application Message Bundle -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>i18/index</value>
				<value>i18/validationMessages</value>
				<value>config/urls</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="cacheSeconds" value="0" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!--PASO2: “SessionLocaleResolver” utiliza la sesión del usuario para especificar 
		el “Locale” actual. -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="es" />
	</bean>

	<!-- PASO3: LOCAL INTERCEPTOR -> cargar el interceptor en el “urlMapping” 
		de nuestra aplicación. http://shibboleth.net/pipermail/users/2015-November/025186.html -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="localeChangeInterceptor"
				class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<property name="paramName" value="lang" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- Messages validator con i18n -->
	<!-- https://stackoverflow.com/questions/34397070/spring-mvc-i18n-validation-error-messages -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- Bean para el envio de correos -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="citytrashtfg@gmail.com" />
		<property name="password" value="c17yTr4asH" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

</beans:beans>
		