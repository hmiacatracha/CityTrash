<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- https://docs.spring.io/autorepo/docs/spring-security/4.0.x/reference/html/ns-config.html -->
	<!-- Enabled secured-annotations with Java based configuration @Secured 
		@Secured("IS_AUTHENTICATED_ANONYMOUSLY") and SPring Native annotations @PreAuthorize("isAnonymous()"), 
		@PreAuthorize("hasAuthority('ROLE_TELLER')") -->
	<global-method-security secured-annotations="enabled"
		pre-post-annotations="enabled" />

	<!-- beans bcryptEncoder -->
	<beans:bean id="bcryptEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- failure autentication handler -->
	<beans:bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl"
			value="/login?error=BadCredentialsException" />
		<beans:property name="exceptionMappings">
			<beans:map>
				<beans:entry
					key="org.springframework.security.core.userdetails.UsernameNotFoundException"
					value="/login?error=UsernameNotFoundException" />
				<beans:entry
					key="org.springframework.security.authentication.BadCredentialsException"
					value="/login?error=BadCredentialsException" />
				<beans:entry
					key="org.springframework.security.authentication.CredentialsExpiredException"
					value="/login?error=CredentialsExpiredException" />
				<beans:entry
					key="org.springframework.security.authentication.LockedException"
					value="/login?error=LockedException" />
				<beans:entry
					key="org.springframework.security.authentication.DisabledException"
					value="/login?error=DisabledException" />
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- https://doanduyhai.wordpress.com/2012/02/05/spring-security-part-iii-authenticationprocessingfilter-anonymousfilter/ -->
	<!-- succes handler => after login, return to the last visited page -->
	<!-- SavedRequestAwareAuthenticationSuccessHandler: redirects the user to 
		the requested page. If the initial request does not target any specific page, 
		redirect it to the defaultTargetUrl set as parameter -->
	<beans:bean id="authenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<!-- After login, return to the last visited page -->
		<beans:property name="defaultTargetUrl" value="/" />
	</beans:bean>

	<!-- Declare an authentication-manager to use a custom userService -->
	<authentication-manager>
		<!-- <authentication-provider user-service-ref='userServiceImpl'> <user-service> 
			<user name="memuser" password="pass" authorities="ROLE_USER" /> </user-service> 
			</authentication-provider> -->
		<authentication-provider ref="customAuthenticationProvider" />
		<!-- customAuthenticationProvider is @Component -->
	</authentication-manager>

	<!-- Authentication policy for every page -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/resources/static/**" access="permitAll" />
		<intercept-url pattern="/**" access="permitAll" />
		<!-- <intercept-url pattern="/login**" access="IS_AUTHENTICATED_ANONYMOUSLY" 
			/> <intercept-url pattern="/cuenta/actualizarPassword/**" access="isAuthenticated()" 
			/> <intercept-url pattern="/cuenta/idiomapreferencia/**" access="isAuthenticated()" 
			/> <intercept-url pattern="/auth/admin/**" access="hasRole('ROLE_ADMIN')" 
			/> <intercept-url pattern="/auth/user/**" access="hasRole('ROLE_USER')" /> -->

		<form-login default-target-url="/" login-page="/login"
			username-parameter="username" password-parameter="password"
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler" />

		<logout logout-success-url="/" logout-url="/j_spring_security_logout"
			invalidate-session="true" delete-cookies=" JSESSIONID" />
		<!-- remember-me default of 2 weeks but this only for one day => 24 * 60 
			* 60 = 86400 -->
		<remember-me key="remember-me" token-validity-seconds="86400"
			remember-me-parameter="remember-me-param" remember-me-cookie="my-remember-me" />
		<!-- session management -->
		<!-- https://docs.spring.io/spring-security/site/docs/current/reference/html/ns-config.html -->
		<session-management invalid-session-url="/login"
			session-fixation-protection="migrateSession">
			<concurrency-control expired-url="/login"
				max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
		<csrf disabled="true" />
		<access-denied-handler error-page="/error/403" />
	</http>
</beans:beans>
