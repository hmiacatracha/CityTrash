<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans        
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/tx 
  		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd  http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<context:annotation-config />

	<!-- Configures the location of static resources such as css files. Requires 
		Spring Framework 3.0 or higher. -->
	<!-- comentado porque da error al realizar mvc:test <mvc:resources mapping="/static/**" 
		location="/static/" /> <mvc:resources mapping="/resources/**" location="/resources/" 
		/> -->

	<!-- Use spring servlet for all requests, including static resources -->
	<!-- Ensures that dispatcher servlet can be mapped to '/' and that static 
		resources are still served by the containers default servlet. Requires Spring 
		Framework 3.0 or higher. -->
	<mvc:default-servlet-handler />
	<!-- Enable component scanning for defining beans with annotations. -->
	<context:component-scan base-package="es.udc.citytrash.model" />
	<!-- <context:component-scan base-package="es.udc.citytrash.service" /> -->

	<!-- For transngting native persistence exceptions to Spring's DataAccessException 
		hierarchy. -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<!-- Data source. -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"
		p:jndiName="${dataSource.jndiName}" p:resourceRef="true" />
	<!-- *********************************************************************** 
		To avoid requesting unnecessary connections with the Open Session in View 
		filter, uncomment this and change "sessionFactory" bean (below) to use "dataSourceProxy" 
		instead of "dataSource". -->
	<bean id="dataSourceProxy"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy"
		p:targetDataSource-ref="dataSource" />
	<!-- Hibernate Session Factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		p:dataSource-ref="dataSourceProxy" p:configLocation="classpath:/hibernate-config.xml" />
	<!-- Transaction manager for a single Hibernate SessionFactory. -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- Enable the configuration of transactional behavior based on annotations. -->
	<tx:annotation-driven transaction-manager="txManager" />

</beans>