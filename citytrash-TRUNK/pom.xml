<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.udc</groupId>
	<artifactId>citytrash</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>${project.artifactId} Project</name>
	<url>http://maven.apache.org</url>
	<properties>
		<!-- Data source properties -->
		<dataSource.user>citytrashpojo</dataSource.user>
		<dataSource.password>c17yTr4asH</dataSource.password>
		<dataSource.jndiName>jdbc/pojo-citytrashpojo-ds</dataSource.jndiName>
		<testDataSource.user>${dataSource.user}</testDataSource.user>
		<testDataSource.password>${dataSource.password}</testDataSource.password>
		<!-- Hibernate properties -->
		<hibernate.show_sql>true</hibernate.show_sql>
		<hibernate.format_sql>true</hibernate.format_sql>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>
		<hibernate.timezone>UTC</hibernate.timezone>
		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- project versions -->
		<slf4j.version>1.7.7</slf4j.version>
		<commons.logging.version>1.2</commons.logging.version>
		<javassist.version>3.22.0-CR1</javassist.version>
		<cglib.version>3.2.4</cglib.version>
		<commons-io.version>2.5</commons-io.version>
		<hibernate.version>5.2.10.Final</hibernate.version>
		<!-- <hibernate-validator.version>5.2.1.Final</hibernate-validator.version> -->
		<hibernate-validator.version>6.0.10.Final</hibernate-validator.version>
		<glassfish.version>3.0.1-b09</glassfish.version>
		<java.validator.version>2.0.0.Final</java.validator.version>
		<mysql-connector-java.version>5.1.6</mysql-connector-java.version>
		<junit.version>4.12</junit.version>
		<selenium.version>3.11.0</selenium.version>
		<mockito.core.version>2.16.0</mockito.core.version>
		<mockito.all.version>1.10.19</mockito.all.version>
		<spring.security.test>5.0.4.RELEASE</spring.security.test>
		<spring.version>4.3.14.RELEASE</spring.version>
		<springdata.version>1.11.3.RELEASE</springdata.version>
		<spring.security.version>4.2.3.RELEASE</spring.security.version>
		<servletApi.version>3.1.0</servletApi.version>
		<thymeleaf.version>3.0.6.RELEASE</thymeleaf.version>
		<thymeleaf.security>3.0.2.RELEASE</thymeleaf.security>
		<thymeleaf.layout>2.2.2</thymeleaf.layout>
		<thymeleaf.java8time>3.0.1.RELEASE</thymeleaf.java8time>
		<thymeleaf.data.dialect>3.3.1</thymeleaf.data.dialect>
		<jquery.version>3.2.1</jquery.version>
		<jquery.validador.version>1.17.0</jquery.validador.version>
		<jqyery.i18.version>1.0.9</jqyery.i18.version>
		<boostrap.version>3.3.7-1</boostrap.version>
		<boostrap.hover.dropdown.version>2.1.3</boostrap.hover.dropdown.version>
		<animate.version>3.5.2</animate.version>
		<guava.version>22.0</guava.version>
		<jackson.version>2.9.4</jackson.version>
		<modelmap.version>0.7.4</modelmap.version>
		<!-- Plugin versions -->
		<mavenCompilerPlugin.version>3.5.1</mavenCompilerPlugin.version>
		<mavenResourcesPlugin.version>2.6</mavenResourcesPlugin.version>
		<sqlMavenPlugin.version>1.5</sqlMavenPlugin.version>
		<mavenAssemblyPlugin.version>2.4</mavenAssemblyPlugin.version>
		<jettyMavenPlugin>9.3.0.v20150612</jettyMavenPlugin>
		<webVersion>3.1</webVersion>
		<cobertura.plugin>2.7</cobertura.plugin>
	</properties>
	<!-- Profiles -->
	<profiles>
		<profile>
			<id>mysql</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- JDBC driver properties -->
				<jdbcDriver.groupId>mysql</jdbcDriver.groupId>
				<jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
				<jdbcDriver.version>6.0.6</jdbcDriver.version>
				<jdbcDriver.className>com.mysql.jdbc.Driver</jdbcDriver.className>
				<jdbcDriver.className>com.mysql.cj.jdbc.Driver</jdbcDriver.className>
				<!--Data source properties -->
				<url>jdbc:mysql://localhost/citytrashpojo</url>
				<dataSource.url>${url}?serverTimezone=UTC</dataSource.url>
				<testDataSource.url>${url}test?serverTimezone=UTC</testDataSource.url>
				<dataSource.createTablesScript>1-MySQLCreateTables.sql</dataSource.createTablesScript>
				<dataSource.createDataScript>2-MySQLCreateData.sql</dataSource.createDataScript>
				<!-- Hibernate properties -->
				<hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
				<hibernate.charSet>utf8</hibernate.charSet>
				<hibernate.useunicode>true</hibernate.useunicode>
				<!-- Email properties -->
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<!-- JDBC driver -->
		<dependency>
			<groupId>${jdbcDriver.groupId}</groupId>
			<artifactId>${jdbcDriver.artifactId}</artifactId>
			<version>${jdbcDriver.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- SLF4J required by hibernate -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- required by hibernate -->
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>${javassist.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- CGLIB (required by Spring) -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- Commons Logging para quitar dependencias en tiempo de compilación, 
			o ejecución, a cualquier paquete de log y ofrecer un interfaz común para 
			generar logs, independientemente de la librería elegida. -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons.logging.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<!-- session factory interface -->
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>3.0.0</version>
		</dependency>
		<!-- pruebas -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.core.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.all.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${spring.security.test}</version>
		</dependency>

		<!-- fin pruebas -->

		<!-- spring dependencies -->
		<!-- support hibernate session factory implementation -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- ***************************************************************************** -->
		<!-- ************************************** SEND EMAIL *************************** -->
		<!-- ***************************************************************************** -->
		<!-- http://www.technicalkeeda.com/spring-tutorials/spring-4-sending-email-with-freemarker-template -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.5.5</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<!-- Sending email with freemarker template -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.23</version>
		</dependency>
		<!-- ***************************************************************************** -->
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- https://machiel.me/post/how-to-configure-spring-security-using-hibernate-with-spring-mvc/ -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<!-- hibernate validator 6 need Unified Unified Expression Language (EL) -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>${glassfish.version}</version>

		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.validation/validation-api -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${java.validator.version}</version>
		</dependency>

		<!-- jquery validation plugin -->
		<!-- https://mvnrepository.com/artifact/org.webjars/jquery-validation -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery-validation</artifactId>
			<version>${jquery.validador.version}</version>
		</dependency>
		<!-- java mysql connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
		</dependency>
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servletApi.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- thymeleaf -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
			<version>${thymeleaf.security}</version>
		</dependency>
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
			<version>${thymeleaf.layout}</version>
		</dependency>
		<!-- Times in thymeleaf http://www.baeldung.com/dates-in-thymeleaf -->
		<!-- https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-java8time -->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-java8time</artifactId>
			<version>${thymeleaf.java8time}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.github.jpenren/thymeleaf-spring-data-dialect -->
		<!-- https://github.com/jpenren/thymeleaf-spring-data-dialect for pagination 
			in thymeleaf -->
		<dependency>
			<groupId>io.github.jpenren</groupId>
			<artifactId>thymeleaf-spring-data-dialect</artifactId>
			<version>${thymeleaf.data.dialect}</version>
		</dependency>
		<!-- jquery plugis -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.webjars</groupId> <artifactId>jquery-i18n-properties</artifactId> 
			<version>${jqyery.i18.version}</version> </dependency> -->
		<!-- boostrap plugins -->
		<!-- css -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${boostrap.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.webjars.bower/bootstrap-hover-dropdown -->
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>bootstrap-hover-dropdown</artifactId>
			<version>${boostrap.hover.dropdown.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.webjars.bower/animate.css -->
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>animate.css</artifactId>
			<version>${animate.version}</version>
		</dependency>

		<!-- -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- BeansUtils validator -->
		<!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- json generator return value (json to/from object) -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- GEOJson -->
		<dependency>
			<groupId>de.grundid.opendatalab</groupId>
			<artifactId>geojson-jackson</artifactId>
			<version>1.8</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.modelmapper/modelmapper mapper 
			to entity to dto -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>${modelmap.version}</version>
		</dependency>
		<!-- fin dependencias json -->
	</dependencies>


	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<!-- Apply filtering to files matching the following expressions in src/main/resources. -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>spring-config.xml</include>
					<include>spring-security-context.xml</include>
					<include>dispatcher-servlet.xml</include>
					<include>hibernate-config.xml</include>
					<include>templates/**</include>
					<include>templates/email/**.txt</include>
					<include>i18n/**.properties</include>
					<include>config/**.properties</include>
					<include>static/**</include>
				</includes>
			</resource>
			<!-- Continue considering resources the files in src/main/resources, but 
				without applying filtering. -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<!-- Filter Jetty configuration -->
			<resource>
				<directory>src/main/jetty</directory>
				<includes>
					<include>jetty-env.xml</include>
				</includes>
				<targetPath>../jetty</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>
			<!-- Apply filtering to files matching the following expressions in src/test/resources. -->
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>spring-config-test.xml</include>
					<include>dispatcher-servlet.xml</include>
					<include>hibernate-config-experiments.xml</include>
				</includes>
			</testResource>
			<!-- Continue considering resources the files in src/test/resources, but 
				without applying filtering. -->
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<!-- Added to avoid problems with the maven plugin for eclipse -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>${sqlMavenPlugin.version}</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<warSourceDirectory>src/main/webapp</warSourceDirectory>
						<warName>icityTrash</warName>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${cobertura.plugin}</version>
					<configuration>
						<formats>
							<format>html</format>
							<format>xml</format>
						</formats>
						<check />
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- ========================================================== -->
			<!-- Compiler configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${mavenCompilerPlugin.version}</version>
				<configuration>
					<verbose>true</verbose>
					<source>
						1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Setting SQL Plugin -->
			<!-- - Configuartion specifies onError="continue" since SQL scripts try 
				to drop tables before creating them (which causes errors if such tables do 
				not exist yet). - Configuartion specifies autocommit="true" since some drivers 
				(e.g the PostgreSQL JDBC 2 driver) do not commit changes if some error ocurrs. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>${sqlMavenPlugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>${jdbcDriver.groupId}</groupId>
						<artifactId>${jdbcDriver.artifactId}</artifactId>
						<version>${jdbcDriver.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>${jdbcDriver.className}</driver>
					<url>${dataSource.url}</url>
					<username>${dataSource.user}</username>
					<password>${dataSource.password}</password>
					<autocommit>true</autocommit>
					<onError>continue</onError>
					<orderFile>ascending</orderFile>
					<fileset>
						<basedir>${basedir}</basedir>
						<includes>
							<include>src/sql/${dataSource.createTablesScript}</include>
							<include>src/sql/${dataSource.createDataScript}</include>
						</includes>
					</fileset>
				</configuration>
				<executions>
					<execution>
						<id>create-tables-for-testing</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${jdbcDriver.className}</driver>
							<url>${testDataSource.url}</url>
							<username>${testDataSource.user}</username>
							<password>${testDataSource.password}</password>
							<autocommit>true</autocommit>
							<onError>continue</onError>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/sql/${dataSource.createTablesScript}</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- ========================================================== -->
			<!-- Assembly configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${mavenAssemblyPlugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/src.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

			<!-- ========================================================== -->
			<!-- Jetty configuration -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jettyMavenPlugin}</version>
				<configuration>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
						<jettyEnvXml>target/jetty/jetty-env.xml</jettyEnvXml>
					</webAppConfig>
					<reload>manual</reload>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>9090</port>
						</connector>
					</connectors>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>${jdbcDriver.groupId}</groupId>
						<artifactId>${jdbcDriver.artifactId}</artifactId>
						<version>${jdbcDriver.version}</version>
					</dependency>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-jdbc</artifactId>
						<version>${spring.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.webjars</groupId>
				<artifactId>webjars-maven-plugin</artifactId>
				<version>0.2.0</version>
			</plugin>
		</plugins>
	</build>
</project>